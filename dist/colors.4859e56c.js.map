{"version":3,"sources":["modules/colors.js"],"names":["lighten","dat","r","g","b","length","cmin","s","Math","min","cmax","max","delta","h","l","round","abs","c","x","m"],"mappings":"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","file":"colors.4859e56c.js","sourceRoot":"..","sourcesContent":["function lighten(dat) {\n  let r, g, b, a;\n  [r, g, b, a] = dat;\n\n  if (r.length == 1) r = \"0\" + r;\n  if (g.length == 1) g = \"0\" + g;\n  if (b.length == 1) b = \"0\" + b;\n\n  // Make r, g, and b fractions of 1\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  // Find greatest and smallest channel values\n  let cmin = Math.min(r, g, b),\n    cmax = Math.max(r, g, b),\n    delta = cmax - cmin,\n    h = 0,\n    s = 0,\n    l = 0;\n  // Calculate hue\n  // No difference\n  if (delta == 0) h = 0;\n  // Red is max\n  else if (cmax == r) h = ((g - b) / delta) % 6;\n  // Green is max\n  else if (cmax == g) h = (b - r) / delta + 2;\n  // Blue is max\n  else h = (r - g) / delta + 4;\n\n  h = Math.round(h * 60);\n\n  // Make negative hues positive behind 360Â°\n  if (h < 0) h += 360;\n  // Calculate lightness\n  l = (cmax + cmin) / 2;\n\n  // Calculate saturation\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n  l += 0.3; // the key line\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n    m = l - c / 2;\n  (r = 0), (g = 0), (b = 0);\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  return [r, g, b];\n  //return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\"\n}\n"]}